import numpy as np
import sklearn
import matplotlib.pyplot as plt 
import pandas as pd 
import scipy.linalg
import sklearn.linear_model
import sklearn.preprocessing
from gradient_descent import compute_misclassification_error,generate_simulate_logistic
from demo_simulate import *
print('Loading simulate Data..,.')


n_train = len(y_train)
n_test = len(y_test)
d = np.size(x, 1)
print('The size of train data is ',n_train)
print('The size of test data is',n_test)
print('The number of feature is ', d)




lr=sklearn.linear_model.LogisticRegression(C=optimal_lambda,fit_intercept=False,tol=10e-8,max_iter=1000,penalty='l2')
lr.fit(x_train, y_train)

beta_sklearn=lr.coef_[0]
beta_gradient=betas_grad[1000,:]
print('The Optimnal Coefficient from sklearn:',beta_sklearn)
print('The Optimnal Coefficient from Gradient Descent Algorithmn',beta_gradient)

print('Genreating misclassification error plot from sklearn')
a=compute_misclassification_error(beta_opt=beta_sklearn,x=x_test,y=y_test)
print('The misclassification error for test data generated by sklearn package is:',a)

b=compute_misclassification_error(beta_opt=beta_gradient,x=x_test,y=y_test)
print('The misclassification error for test data generated by gradient descent is:',b)